plugins {
//    id 'application'  // 플러그인 장착!
    id 'java' // application에 java가 포함되어 있기 때문에 java를 장착 안해도 된다!
    id 'org.springframework.boot' version '3.5.4'
}

// SpringBoot 의 버전에 맞춰 의존 라이브러리 버전을 관리하는 플러그인 / Plungin 하고 난 뒤에 해야해서 뒤에 써줘야함(이걸 Plugins 안에 넣고싶으면 버전 명시 해야함;;)
apply plugin: 'io.spring.dependency-management'

repositories {
    mavenCentral() // 의존 라이브러리를 갖고 있는 중앙 저장소 서버의 주소를 지정한다.
}

dependencies {  // 라이브러리 이름 기록
    implementation 'org.springframework.boot:spring-boot-starter-web'  // 라이브러리를 묶어놓은 starter set

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.junit.jupiter:junit-jupiter:5.12.1'  // 단위테스트 소스 파일을 컴파일, 실행 할 때 사용 / 테스트는 아래에
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'  // 단위테스트 소스 파일을 컴파일 할 때는 안쓰고 실행할 때 사용

    developmentOnly 'org.springframework.boot:spring-boot-devtools'  // 개발할 때만 사용
}

java {  // 자바 플러그인 옵션 지정
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

jar {
    archiveFileName = 'myapp.jar'  // 아카이브 파일 이름 설정
}

tasks.named('test') {
    useJUnitPlatform()
}

tasks.withType(JavaExec) {
    systemProperty 'sun.stdout.encoding', 'UTF-8'  // 표준출력을 UTF-8로 설정
    systemProperty 'sun.stderr.encoding', 'UTF-8'  // 표출에러출력을 UTF-8로 설정
}